{
	"info": {
		"_postman_id": "802413d1-e083-452f-be48-b0ad64e77fd7",
		"name": "PBL-GN3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34298330"
	},
	"item": [
		{
			"name": "IOT Agent MQTT",
			"item": [
				{
					"name": "1.1 Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{IoT-Agent MQTT}}/iot/about",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{IoT-Agent MQTT}}",
							"path": [
								"iot",
								"about"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Provisioning a Service Group for MQTT",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "smart"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"services\": [\n   {\n     \"apikey\":      \"PBL-GN3\",               // Chave de acesso para o serviço (API Key)\n     \"cbroker\":     \"http://{{host}}:{{Orion Context Broker}}\", // URL do Orion Context Broker associado ao serviço\n     \"entity_type\": \"Thing\",             // Tipo de entidade associado ao serviço\n     \"resource\":    \"\"                   // Recurso associado ao serviço (pode estar vazio)\n   }\n ]\n}\n"
						},
						"url": {
							"raw": "http://{{host}}:{{IoT-Agent MQTT}}/iot/services",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{IoT-Agent MQTT}}",
							"path": [
								"iot",
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.1 Health Check Services",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "smart"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							}
						],
						"url": {
							"raw": "http://{{host}}:{{IoT-Agent MQTT}}/iot/services",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{IoT-Agent MQTT}}",
							"path": [
								"iot",
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.1 Delete a Service Group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "fiware-service",
								"value": "smart"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{host}}:{{IoT-Agent MQTT}}/iot/services/?resource=&apikey=TEF",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{IoT-Agent MQTT}}",
							"path": [
								"iot",
								"services",
								""
							],
							"query": [
								{
									"key": "resource",
									"value": "",
									"description": "The path that the IoT Agent had been listening on"
								},
								{
									"key": "apikey",
									"value": "TEF"
								}
							]
						},
						"description": "This example removes a provisioned service group by making a DELETE request to the `/iot/services/` endpoint.\n\nIt means that requests to `http://iot-agent:7896/iot/d?i=<device_id>&k=4jggokgpepnvsb2uv4s40d59ov`\n(where the IoT Agent is listening for **Northbound** communications) should no longer be processed by the IoT Agent. \nThe `apiKey` and `resource` parameters must be supplied in order to identify the service group to be deleted."
					},
					"response": []
				},
				{
					"name": "3. Provisioning a Temperature Sensor",
					"request": {
						"auth": {
							"type": "apikey"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "smart"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": [\n    {\n      \"device_id\":   \"temp003\",         // Identificador único do dispositivo\n      \"entity_name\": \"{{entity_name}}\",   // Nome da entidade para o dispositivo\n      \"entity_type\": \"Temp\",          // Tipo da entidade\n      \"protocol\":    \"PDI-IoTA-UltraLight\",  // Protocolo usado para a comunicação\n      \"transport\":   \"MQTT\",            // Método de transporte\n\n      // Lista de atributos associados ao dispositivo\n      \"attributes\": [\n        { \"object_id\": \"t\", \"name\": \"temperature\", \"type\": \"float\" }  // Atributo de luminosidade (Inteiro)\n      ]\n    }\n  ]\n}\n"
						},
						"url": {
							"raw": "http://{{host}}:{{IoT-Agent MQTT}}/iot/devices",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{IoT-Agent MQTT}}",
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. List all Devices Provisioned",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "smart"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							}
						],
						"url": {
							"raw": "http://{{host}}:{{IoT-Agent MQTT}}/iot/devices",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{IoT-Agent MQTT}}",
							"path": [
								"iot",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Result of  Temperature Sensor",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "smart"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							},
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{host}}:{{Orion Context Broker}}/v2/entities/{{entity_name}}/attrs/temperature",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{Orion Context Broker}}",
							"path": [
								"v2",
								"entities",
								"{{entity_name}}",
								"attrs",
								"temperature"
							]
						}
					},
					"response": []
				},
				{
					"name": "8. Delete Temperature Sensor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "fiware-service",
								"value": "smart"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							}
						],
						"url": {
							"raw": "http://{{host}}:{{IoT-Agent MQTT}}/iot/devices/temp003",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{IoT-Agent MQTT}}",
							"path": [
								"iot",
								"devices",
								"temp003"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "STH-Comet",
			"item": [
				{
					"name": "1. Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{STH-Comet}}/version",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{STH-Comet}}",
							"path": [
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Subscribe Temperature",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "smart"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"STH subscription\", // Descrição da notificação\r\n    \"subject\": {\r\n        \"entities\": [\r\n            {\r\n                \"id\": \"{{entity_name}}\",\r\n                \"type\": \"Temp\"\r\n            }\r\n        ],\r\n        \"condition\": { \"attrs\": [\"temperature\"] }\r\n    },\r\n    \"notification\": {\r\n        \"http\": {\r\n            \"url\": \"http://sth-comet:{{STH-Comet}}/notify\" // URL para notificação do STH-Comet\r\n        },\r\n        \"attrs\": [\r\n            \"temperature\" // Atributo a ser notificado (luminosidade)\r\n        ],\r\n        \"attrsFormat\": \"legacy\" // Formato dos atributos a ser notificado (legado)\r\n    } \r\n}"
						},
						"url": {
							"raw": "http://{{host}}:{{Orion Context Broker}}/v2/subscriptions",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{Orion Context Broker}}",
							"path": [
								"v2",
								"subscriptions"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Request Temperature",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "smart"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							}
						],
						"url": {
							"raw": "http://{{host}}:{{STH-Comet}}/STH/v2/entities/{{entity_name}}/attrs/temperature?lastN=30&type=Temp",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{STH-Comet}}",
							"path": [
								"STH",
								"v2",
								"entities",
								"{{entity_name}}",
								"attrs",
								"temperature"
							],
							"query": [
								{
									"key": "hLimit",
									"value": "100",
									"description": "Este parâmetro limita o número máximo de resultados retornados em uma única consulta de histórico. No exemplo, está configurado para 100, o que significa que, no máximo, 100 pontos de dados serão retornados em uma única solicitação.",
									"disabled": true
								},
								{
									"key": "hOffset",
									"value": "1",
									"description": "Define o deslocamento da consulta. É usado para recuperar resultados além do limite. No exemplo, está configurado como 1, o que significa que a consulta começará a partir do segundo resultado (ignorando o primeiro resultado).",
									"disabled": true
								},
								{
									"key": "aggrMethod",
									"value": "occur",
									"description": "Define o método de agregação utilizado nos resultados. No exemplo, está configurado como 'occur', sugerindo que a agregação é feita com base na ocorrência dos eventos.",
									"disabled": true
								},
								{
									"key": "aggrPeriod",
									"value": "hour",
									"description": "Define o período de agregação. Neste caso, está configurado para 'hour' (hora), o que sugere que os dados estão sendo agregados em intervalos de hora.",
									"disabled": true
								},
								{
									"key": "dateFrom",
									"value": "2023-08-02T18:28:21.237",
									"description": "Formato UTC",
									"disabled": true
								},
								{
									"key": "dateTo",
									"value": "2023-08-03T10:28:21.237",
									"disabled": true
								},
								{
									"key": "lastN",
									"value": "30"
								},
								{
									"key": "type",
									"value": "Temp"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orion Context Broker",
			"item": [
				{
					"name": "1.Version",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{Orion Context Broker}}/version",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{Orion Context Broker}}",
							"path": [
								"version"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.Create",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "smart"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{entity_name}}\",\r\n  \"type\": \"iot\",\r\n\r\n  \"temperature\": {\r\n  \"type\": \"float\",\r\n  \"value\": 0\r\n    }\r\n}\r\n\r\n  \r\n"
						},
						"url": {
							"raw": "http://{{host}}:{{Orion Context Broker}}/v2/entities",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{Orion Context Broker}}",
							"path": [
								"v2",
								"entities"
							]
						},
						"description": "cria entidade"
					},
					"response": []
				},
				{
					"name": "3.Get ",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "smart"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							}
						],
						"url": {
							"raw": "http://{{host}}:{{Orion Context Broker}}/v2/entities",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{Orion Context Broker}}",
							"path": [
								"v2",
								"entities"
							]
						}
					},
					"response": []
				},
				{
					"name": "4.Update",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "fiware-service",
								"value": "smart"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"temperature\": {\r\n  \"type\": \"float\",\r\n  \"value\":35\r\n    }\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{host}}:{{Orion Context Broker}}/v2/entities/{{entity_name}}/attrs",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{Orion Context Broker}}",
							"path": [
								"v2",
								"entities",
								"{{entity_name}}",
								"attrs"
							]
						}
					},
					"response": []
				},
				{
					"name": "5.Selective_update_temperature",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "fiware-service",
								"value": "smart"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "95"
						},
						"url": {
							"raw": "http://{{host}}:{{Orion Context Broker}}/v2/entities/{{entity_name}}/attrs/temperature/value",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{Orion Context Broker}}",
							"path": [
								"v2",
								"entities",
								"{{entity_name}}",
								"attrs",
								"temperature",
								"value"
							]
						}
					},
					"response": []
				},
				{
					"name": "6.Delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "fiware-service",
								"value": "smart"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://{{host}}:{{Orion Context Broker}}/v2/entities/{{entity_name}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{Orion Context Broker}}",
							"path": [
								"v2",
								"entities",
								"{{entity_name}}"
							],
							"query": [
								{
									"key": "type",
									"value": "Thing",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}